using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController : MonoBehaviour
{
    public Animator animator;
    private Rigidbody2D rb2D;

    private float moveSpeed;
    private float jumpForce;
    private bool isJumping;
    private float moveHorizontal;
    private float moveVertical;

    bool facingRight = true;

    // Start is called before the first frame update
    void Start()
    {
        rb2D = gameObject.GetComponent<Rigidbody2D>();

        moveSpeed = 2f;
        jumpForce = 45f;
        isJumping = true;
    }

    // Update is called once per frame
    void Update()
    {
        //Takes data from the game into the code in a variable
        moveHorizontal = Input.GetAxisRaw("Horizontal");
        moveVertical = Input.GetAxisRaw("Vertical");

        animator.SetFloat("moveSpeed", Mathf.Abs(moveHorizontal));

    }

    // FixedUpdate is called once per fixed time passed
    void FixedUpdate()
    {
        //Checks which direction character character is trying to move and adds force
        if(moveHorizontal > 0.01f  || moveHorizontal < -0.01f)
        {
            rb2D.AddForce(new Vector2(moveHorizontal * moveSpeed, 0f), ForceMode2D.Impulse);
        }
       
        if (!isJumping && moveVertical > 0.01f )
        {
            rb2D.AddForce(new Vector2(0f, moveVertical * jumpForce), ForceMode2D.Impulse);
        }
        if (moveHorizontal > 0 && !facingRight)
        {
            Flip();
        }
        if (moveHorizontal < 0 && facingRight)
        {
            Flip();
        }
    }
    //Boxcollider checks if the character is in the air/jumping
    void OnTriggerEnter2D(Collider2D collision)
    {
        if(collision.gameObject.tag == "Platform")
        {
            isJumping = false;
        }
        if (isJumping == false)
        {
            animator.SetBool("isJumping", false);
        }
    }
    //Transition to jump animation if boxcollider doesn't detect platform
    void OnTriggerExit2D(Collider2D collision)
    {
        if (collision.gameObject.tag == "Platform")
        {
            isJumping = true;
        }
        if (isJumping == true)
        {
            animator.SetBool("isJumping", true);
        }
    }
    //Flips the character through matrices when moving in a different direction
    void Flip()
    {
        Vector3 currentScale = gameObject.transform.localScale;
        currentScale.x *= -1;
        gameObject.transform.localScale = currentScale;

        facingRight = !facingRight;
    }
}

